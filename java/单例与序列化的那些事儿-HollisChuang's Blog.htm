<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><script async="" charset="utf-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/liteload.js"></script><script async="" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/longloop.js"></script><script type="text/javascript" charset="utf-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/changyan.js"></script>
<meta charset="UTF-8">
<link rel="dns-prefetch" href="http://apps.bdimg.com/">
<meta http-equiv="X-UA-Compatible" content="IE=11,IE=10,IE=9,IE=8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
<meta name="apple-mobile-web-app-title" content="HollisChuang's Blog">
<meta http-equiv="Cache-Control" content="no-siteapp">
<title>单例与序列化的那些事儿-HollisChuang's Blog</title>
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.hollischuang.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.15"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/wp-emoji-release.js" type="text/javascript"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="stylesheet" id="wp-player-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/wp-player.css" type="text/css" media="screen">
<link rel="stylesheet" id="_bootstrap-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/bootstrap.css" type="text/css" media="all">
<link rel="stylesheet" id="_fontawesome-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/font-awesome.css" type="text/css" media="all">
<link rel="stylesheet" id="_main-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/main.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-markdown-prettify-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/prettify.css" type="text/css" media="all">
<link rel="stylesheet" id="douban_collections-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/douban-collections.css" type="text/css" media="screen">
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/jquery.js"></script>
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/prettify.js"></script>
<link rel="prev" title="深入分析Java的序列化与反序列化" href="http://www.hollischuang.com/archives/1140">
<link rel="next" title="Java对象的序列化与反序列化" href="http://www.hollischuang.com/archives/1150">
<link rel="canonical" href="http://www.hollischuang.com/archives/1144">
<link rel="shortlink" href="http://www.hollischuang.com/?p=1144">
<meta name="keywords" content="单例, 序列化, Java">
<meta name="description" content="本文将通过实例+阅读Java源码的方式介绍序列化是如何破坏单例模式的，以及如何避免序列化对单例的破坏。     单例模式，是设计模式中最简单的一种。通过单例模式可以保证系统中一个类只有一个实例而且该实例易于外界访问，从而方便对实例个数的控制并节约系统资源。如果希望在系统中某个类的对象只能存在一个，单例模式是最好的解决方案。关于单例模式的使用方式，可以阅读单例">
<style>a:hover, .site-navbar li:hover > a, .site-navbar li.active a:hover, .site-navbar a:hover, .search-on .site-navbar li.navto-search a, .topbar a:hover, .site-nav li.current-menu-item > a, .site-nav li.current-menu-parent > a, .site-search-form a:hover, .branding-primary .btn:hover, .title .more a:hover, .excerpt h2 a:hover, .excerpt .meta a:hover, .excerpt-minic h2 a:hover, .excerpt-minic .meta a:hover, .article-content .wp-caption:hover .wp-caption-text, .article-content a, .article-nav a:hover, .relates a:hover, .widget_links li a:hover, .widget_categories li a:hover, .widget_ui_comments strong, .widget_ui_posts li a:hover .text, .widget_ui_posts .nopic .text:hover , .widget_meta ul a:hover, .tagcloud a:hover, .textwidget a:hover, .sign h3, #navs .item li a, .url, .url:hover{color: #2CDB87;}.btn-primary, .label-primary, .branding-primary, .post-copyright:hover, .article-tags a, .pagination ul > .active > a, .pagination ul > .active > span, .pagenav .current, .widget_ui_tags .items a:hover, .sign .close-link, .pagemenu li.active a, .pageheader, .resetpasssteps li.active, #navs h2, #navs nav, .btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.active, .open > .dropdown-toggle.btn-primary, .tag-clouds a:hover{background-color: #2CDB87;}.btn-primary, .search-input:focus, #bdcs .bdcs-search-form-input:focus, #submit, .plinks ul li a:hover,.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.active, .open > .dropdown-toggle.btn-primary{border-color: #2CDB87;}.search-btn, .label-primary, #bdcs .bdcs-search-form-submit, #submit, .excerpt .cat{background-color: #2CDB87;}.excerpt .cat i{border-left-color:#2CDB87;}@media (max-width: 720px) {.site-navbar li.active a, .site-navbar li.active a:hover, .m-nav-show .m-icon-nav{color: #2CDB87;}}@media (max-width: 480px) {.pagination ul > li.next-page a{background-color:#2CDB87;}}<meta name="baidu_union_verify" content="4a8bd1a9881911c8738ed782f83b5757"></style>
<!--HEADER_CODE_START-->
<meta name="baidu_union_verify" content="4a8bd1a9881911c8738ed782f83b5757">
<!--HEADER_CODE_END-->
<link rel="shortcut icon" href="http://www.hollischuang.com/favicon.ico">
<!--[if lt IE 9]><script src="http://www.hollischuang.com/wp-content/themes/dux/js/libs/html5.min.js"></script><![endif]-->
<script type="text/javascript" charset="UTF-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/version-v3.js"></script><script type="text/javascript" charset="UTF-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/cookie.js"></script><script type="text/javascript" charset="UTF-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/adapter.js"></script><script type="text/javascript" charset="UTF-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/cyrFnsBtC.js"></script><script async="" data-requirecontext="_" data-requiremodule="main" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/main.js"></script><script type="text/javascript" charset="UTF-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/start.js"></script><script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/share.js"></script><script async="" data-requirecontext="_" data-requiremodule="prettyprint" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/prettyprint.js"></script><script async="" data-requirecontext="_" data-requiremodule="signpop" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/signpop.js"></script><script async="" data-requirecontext="_" data-requiremodule="comment" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/comment.js"></script><link href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/share.css" rel="styleSheet" type="text/css"><style type="text/css">#SOHUCS{clear:both}#SOHUCS #SOHU_MAIN *{box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box}#SOHUCS,#SOHUCS #SOHU_MAIN{margin:0;margin-left:auto;margin-right:auto;padding:0;border:0;font-weight:400;text-align:left;width:100%;height:auto;overflow:visible;font-size:12px;color:#333;background-color:transparent;line-height:1}#SOHUCS #SOHU_MAIN a,#SOHUCS #SOHU_MAIN abbr,#SOHUCS #SOHU_MAIN acronym,#SOHUCS #SOHU_MAIN address,#SOHUCS #SOHU_MAIN applet,#SOHUCS #SOHU_MAIN article,#SOHUCS #SOHU_MAIN aside,#SOHUCS #SOHU_MAIN audio,#SOHUCS #SOHU_MAIN b,#SOHUCS #SOHU_MAIN big,#SOHUCS #SOHU_MAIN blockquote,#SOHUCS #SOHU_MAIN canvas,#SOHUCS #SOHU_MAIN caption,#SOHUCS #SOHU_MAIN center,#SOHUCS #SOHU_MAIN cite,#SOHUCS #SOHU_MAIN code,#SOHUCS #SOHU_MAIN dd,#SOHUCS #SOHU_MAIN del,#SOHUCS #SOHU_MAIN details,#SOHUCS #SOHU_MAIN dfn,#SOHUCS #SOHU_MAIN dialog,#SOHUCS #SOHU_MAIN div,#SOHUCS #SOHU_MAIN dl,#SOHUCS #SOHU_MAIN dt,#SOHUCS #SOHU_MAIN em,#SOHUCS #SOHU_MAIN embed,#SOHUCS #SOHU_MAIN fieldset,#SOHUCS #SOHU_MAIN figcaption,#SOHUCS #SOHU_MAIN figure,#SOHUCS #SOHU_MAIN font,#SOHUCS #SOHU_MAIN footer,#SOHUCS #SOHU_MAIN form,#SOHUCS #SOHU_MAIN h1,#SOHUCS #SOHU_MAIN h2,#SOHUCS #SOHU_MAIN h3,#SOHUCS #SOHU_MAIN h4,#SOHUCS #SOHU_MAIN h5,#SOHUCS #SOHU_MAIN h6,#SOHUCS #SOHU_MAIN header,#SOHUCS #SOHU_MAIN hgroup,#SOHUCS #SOHU_MAIN hr,#SOHUCS #SOHU_MAIN i,#SOHUCS #SOHU_MAIN iframe,#SOHUCS #SOHU_MAIN img,#SOHUCS #SOHU_MAIN ins,#SOHUCS #SOHU_MAIN kbd,#SOHUCS #SOHU_MAIN label,#SOHUCS #SOHU_MAIN legend,#SOHUCS #SOHU_MAIN li,#SOHUCS #SOHU_MAIN mark,#SOHUCS #SOHU_MAIN menu,#SOHUCS #SOHU_MAIN meter,#SOHUCS #SOHU_MAIN nav,#SOHUCS #SOHU_MAIN object,#SOHUCS #SOHU_MAIN ol,#SOHUCS #SOHU_MAIN output,#SOHUCS #SOHU_MAIN p,#SOHUCS #SOHU_MAIN pre,#SOHUCS #SOHU_MAIN progress,#SOHUCS #SOHU_MAIN q,#SOHUCS #SOHU_MAIN rp,#SOHUCS #SOHU_MAIN rt,#SOHUCS #SOHU_MAIN ruby,#SOHUCS #SOHU_MAIN s,#SOHUCS #SOHU_MAIN samp,#SOHUCS #SOHU_MAIN section,#SOHUCS #SOHU_MAIN small,#SOHUCS #SOHU_MAIN span,#SOHUCS #SOHU_MAIN strike,#SOHUCS #SOHU_MAIN strong,#SOHUCS #SOHU_MAIN sub,#SOHUCS #SOHU_MAIN summary,#SOHUCS #SOHU_MAIN sup,#SOHUCS #SOHU_MAIN table,#SOHUCS #SOHU_MAIN tbody,#SOHUCS #SOHU_MAIN td,#SOHUCS #SOHU_MAIN tfoot,#SOHUCS #SOHU_MAIN th,#SOHUCS #SOHU_MAIN thead,#SOHUCS #SOHU_MAIN time,#SOHUCS #SOHU_MAIN tr,#SOHUCS #SOHU_MAIN tt,#SOHUCS #SOHU_MAIN u,#SOHUCS #SOHU_MAIN ul,#SOHUCS #SOHU_MAIN var,#SOHUCS #SOHU_MAIN video,#SOHUCS #SOHU_MAIN xmp{border:0;margin:0;padding:0;font-size:100%;text-align:left;vertical-align:baseline;background-image:none;background-position:0 0;width:auto;float:none;overflow:visible;text-indent:0}#SOHUCS #SOHU_MAIN article,#SOHUCS #SOHU_MAIN aside,#SOHUCS #SOHU_MAIN details,#SOHUCS #SOHU_MAIN figcaption,#SOHUCS #SOHU_MAIN figure,#SOHUCS #SOHU_MAIN footer,#SOHUCS #SOHU_MAIN header,#SOHUCS #SOHU_MAIN hgroup,#SOHUCS #SOHU_MAIN menu,#SOHUCS #SOHU_MAIN nav,#SOHUCS #SOHU_MAIN section{display:block}#SOHUCS #SOHU_MAIN b,#SOHUCS #SOHU_MAIN h1,#SOHUCS #SOHU_MAIN h2,#SOHUCS #SOHU_MAIN h3,#SOHUCS #SOHU_MAIN h4,#SOHUCS #SOHU_MAIN h5,#SOHUCS #SOHU_MAIN h6,#SOHUCS #SOHU_MAIN strong{font-weight:400}#SOHUCS #SOHU_MAIN img{color:transparent;font-size:0;vertical-align:middle;-ms-interpolation-mode:bicubic}#SOHUCS #SOHU_MAIN li,#SOHUCS #SOHU_MAIN ol,#SOHUCS #SOHU_MAIN ul{list-style:none}#SOHUCS #SOHU_MAIN li{display:list-item}#SOHUCS #SOHU_MAIN table{border-collapse:collapse;border-spacing:0}#SOHUCS #SOHU_MAIN caption,#SOHUCS #SOHU_MAIN td,#SOHUCS #SOHU_MAIN th{font-weight:400;vertical-align:top;text-align:left}#SOHUCS #SOHU_MAIN q{quotes:none}#SOHUCS #SOHU_MAIN q:after,#SOHUCS #SOHU_MAIN q:before{content:'';content:none}#SOHUCS #SOHU_MAIN small,#SOHUCS #SOHU_MAIN sub,#SOHUCS #SOHU_MAIN sup{font-size:75%}#SOHUCS #SOHU_MAIN sub,#SOHUCS #SOHU_MAIN sup{line-height:0;position:relative;vertical-align:baseline}#SOHUCS #SOHU_MAIN sub{bottom:-.25em}#SOHUCS #SOHU_MAIN sup{top:-.5em}#SOHUCS #SOHU_MAIN svg{overflow:hidden}#SOHUCS #SOHU_MAIN del,#SOHUCS #SOHU_MAIN ins,#SOHUCS #SOHU_MAIN s,#SOHUCS #SOHU_MAIN u{text-decoration:none}#SOHUCS #SOHU_MAIN p{word-wrap:break-word;break-word:break-all}#SOHUCS #SOHU_MAIN em,#SOHUCS #SOHU_MAIN i{font-style:normal}#SOHUCS #SOHU_MAIN a,#SOHUCS #SOHU_MAIN b,#SOHUCS #SOHU_MAIN em,#SOHUCS #SOHU_MAIN i,#SOHUCS #SOHU_MAIN img,#SOHUCS #SOHU_MAIN input,#SOHUCS #SOHU_MAIN label,#SOHUCS #SOHU_MAIN s,#SOHUCS #SOHU_MAIN span,#SOHUCS #SOHU_MAIN strong,#SOHUCS #SOHU_MAIN sub,#SOHUCS #SOHU_MAIN sup,#SOHUCS #SOHU_MAIN textarea,#SOHUCS #SOHU_MAIN u{display:inline}#SOHUCS #SOHU_MAIN input,#SOHUCS #SOHU_MAIN select,#SOHUCS #SOHU_MAIN select option,#SOHUCS #SOHU_MAIN textarea{margin:0;padding:0;border:0;outline:0}#SOHUCS #SOHU_MAIN a:focus,#SOHUCS #SOHU_MAIN input:focus,#SOHUCS #SOHU_MAIN textarea:focus{outline:0}#SOHUCS #SOHU_MAIN button,#SOHUCS #SOHU_MAIN input,#SOHUCS #SOHU_MAIN select,#SOHUCS #SOHU_MAIN textarea{background-attachment:scroll}#SOHUCS #SOHU_MAIN li{clear:none}#SOHUCS #SOHU_MAIN a{color:#44708e;text-decoration:none}#SOHUCS #SOHU_MAIN a:hover{color:#ee542a;text-decoration:underline}#SOHUCS #SOHU_MAIN .clear-g{zoom:1}#SOHUCS #SOHU_MAIN .clear-g:after{content:".";display:block;visibility:hidden;height:0;clear:both}#SOHUCS #SOHU_MAIN .global-clear-spacing{letter-spacing:-6px}#SOHUCS #SOHU_MAIN .global-clear-spacing *{letter-spacing:normal}</style><style type="text/css">.module-cy-user-page *{box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box}.module-cy-user-page{margin:0;margin-left:auto;margin-right:auto;padding:0;border:0;font-weight:400;text-align:left;width:100%;height:auto;overflow:visible;font-size:12px;color:#333;background-color:transparent;line-height:1}.module-cy-user-page a,.module-cy-user-page abbr,.module-cy-user-page acronym,.module-cy-user-page address,.module-cy-user-page applet,.module-cy-user-page article,.module-cy-user-page aside,.module-cy-user-page audio,.module-cy-user-page b,.module-cy-user-page big,.module-cy-user-page blockquote,.module-cy-user-page canvas,.module-cy-user-page caption,.module-cy-user-page center,.module-cy-user-page cite,.module-cy-user-page code,.module-cy-user-page dd,.module-cy-user-page del,.module-cy-user-page details,.module-cy-user-page dfn,.module-cy-user-page dialog,.module-cy-user-page div,.module-cy-user-page dl,.module-cy-user-page dt,.module-cy-user-page em,.module-cy-user-page embed,.module-cy-user-page fieldset,.module-cy-user-page figcaption,.module-cy-user-page figure,.module-cy-user-page font,.module-cy-user-page footer,.module-cy-user-page form,.module-cy-user-page h1,.module-cy-user-page h2,.module-cy-user-page h3,.module-cy-user-page h4,.module-cy-user-page h5,.module-cy-user-page h6,.module-cy-user-page header,.module-cy-user-page hgroup,.module-cy-user-page hr,.module-cy-user-page i,.module-cy-user-page iframe,.module-cy-user-page img,.module-cy-user-page ins,.module-cy-user-page kbd,.module-cy-user-page label,.module-cy-user-page legend,.module-cy-user-page li,.module-cy-user-page mark,.module-cy-user-page menu,.module-cy-user-page meter,.module-cy-user-page nav,.module-cy-user-page object,.module-cy-user-page ol,.module-cy-user-page output,.module-cy-user-page p,.module-cy-user-page pre,.module-cy-user-page progress,.module-cy-user-page q,.module-cy-user-page rp,.module-cy-user-page rt,.module-cy-user-page ruby,.module-cy-user-page s,.module-cy-user-page samp,.module-cy-user-page section,.module-cy-user-page small,.module-cy-user-page span,.module-cy-user-page strike,.module-cy-user-page strong,.module-cy-user-page sub,.module-cy-user-page summary,.module-cy-user-page sup,.module-cy-user-page table,.module-cy-user-page tbody,.module-cy-user-page td,.module-cy-user-page tfoot,.module-cy-user-page th,.module-cy-user-page thead,.module-cy-user-page time,.module-cy-user-page tr,.module-cy-user-page tt,.module-cy-user-page u,.module-cy-user-page ul,.module-cy-user-page var,.module-cy-user-page video,.module-cy-user-page xmp{border:0;margin:0;padding:0;font-size:100%;text-align:left;vertical-align:baseline;background-image:none;background-position:0 0;width:auto;float:none;overflow:visible;text-indent:0}.module-cy-user-page article,.module-cy-user-page aside,.module-cy-user-page details,.module-cy-user-page figcaption,.module-cy-user-page figure,.module-cy-user-page footer,.module-cy-user-page header,.module-cy-user-page hgroup,.module-cy-user-page menu,.module-cy-user-page nav,.module-cy-user-page section{display:block}.module-cy-user-page b,.module-cy-user-page h1,.module-cy-user-page h2,.module-cy-user-page h3,.module-cy-user-page h4,.module-cy-user-page h5,.module-cy-user-page h6,.module-cy-user-page strong{font-weight:400}.module-cy-user-page img{color:transparent;font-size:0;vertical-align:middle;-ms-interpolation-mode:bicubic}.module-cy-user-page li,.module-cy-user-page ol,.module-cy-user-page ul{list-style:none}.module-cy-user-page li{display:list-item}.module-cy-user-page table{border-collapse:collapse;border-spacing:0}.module-cy-user-page caption,.module-cy-user-page td,.module-cy-user-page th{font-weight:400;vertical-align:top;text-align:left}.module-cy-user-page q{quotes:none}.module-cy-user-page q:after,.module-cy-user-page q:before{content:'';content:none}.module-cy-user-page small,.module-cy-user-page sub,.module-cy-user-page sup{font-size:75%}.module-cy-user-page sub,.module-cy-user-page sup{line-height:0;position:relative;vertical-align:baseline}.module-cy-user-page sub{bottom:-.25em}.module-cy-user-page sup{top:-.5em}.module-cy-user-page svg{overflow:hidden}.module-cy-user-page del,.module-cy-user-page ins,.module-cy-user-page s,.module-cy-user-page u{text-decoration:none}.module-cy-user-page p{word-wrap:break-word;break-word:break-all}.module-cy-user-page em,.module-cy-user-page i{font-style:normal}.module-cy-user-page a,.module-cy-user-page b,.module-cy-user-page em,.module-cy-user-page i,.module-cy-user-page img,.module-cy-user-page input,.module-cy-user-page label,.module-cy-user-page s,.module-cy-user-page span,.module-cy-user-page strong,.module-cy-user-page sub,.module-cy-user-page sup,.module-cy-user-page textarea,.module-cy-user-page u{display:inline}.module-cy-user-page input,.module-cy-user-page select,.module-cy-user-page select option,.module-cy-user-page textarea{margin:0;padding:0;border:0;outline:0}.module-cy-user-page a:focus,.module-cy-user-page input:focus,.module-cy-user-page textarea:focus{outline:0}.module-cy-user-page button,.module-cy-user-page input,.module-cy-user-page select,.module-cy-user-page textarea{background-attachment:scroll}.module-cy-user-page li{clear:none}.module-cy-user-page a{color:#44708e;text-decoration:none}.module-cy-user-page a:hover{color:#ee542a;text-decoration:underline}.module-cy-user-page .clear-g{zoom:1}.module-cy-user-page .clear-g:after{content:".";display:block;visibility:hidden;height:0;clear:both}.module-cy-user-page .global-clear-spacing{letter-spacing:-6px}.module-cy-user-page .global-clear-spacing *{letter-spacing:normal}</style><style type="text/css">.changyan-overlay-lock{overflow:hidden!important;width:auto}.changyan-overlay-lock .changyan-overlay{overflow:auto;overflow-y:scroll}.changyan-overlay{position:absolute;top:0;left:0;overflow:hidden;z-index:8010;background:#000;filter:alpha(opacity=50);opacity:.5;width:auto;height:auto;display:block}.changyan-overlay-fixed{position:fixed;bottom:0;right:0}.changyan-overlay-outer{position:fixed;z-index:8030;top:0;left:0;filter:alpha(opacity=1);opacity:.01}</style><script type="text/javascript" charset="utf-8" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/getnum.htm"></script></head>
<body class="single single-post postid-1144 single-format-standard comment-open site-layout-2">
<header class="header">
	<div class="container">
		<div class="logo"><a href="http://www.hollischuang.com/" title="HollisChuang's Blog-Java干货集散地"><img src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/logo.png">HollisChuang's Blog</a></div>		<div class="brand">天道不一定酬所有勤<br>但是，天道只酬勤<br></div>		<ul class="site-nav site-navbar">
			<li id="menu-item-174" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-174"><a href="http://www.hollischuang.com/">首页</a></li>
<li id="menu-item-165" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-165"><a href="http://www.hollischuang.com/archives/category/java">爪哇</a></li>
<li id="menu-item-166" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-166"><a href="http://www.hollischuang.com/archives/category/%e6%a1%86%e6%9e%b6">框架</a>
<ul class="sub-menu">
	<li id="menu-item-831" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-831"><a href="http://www.hollischuang.com/archives/category/%e6%a1%86%e6%9e%b6/webx">webx</a></li>
	<li id="menu-item-830" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-830"><a href="http://www.hollischuang.com/archives/category/%e6%a1%86%e6%9e%b6/spring">spring</a></li>
	<li id="menu-item-829" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-829"><a href="http://www.hollischuang.com/archives/category/%e6%a1%86%e6%9e%b6/ibatis">ibatis</a></li>
	<li id="menu-item-1824" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1824"><a href="http://www.hollischuang.com/archives/category/%e4%b8%ad%e9%97%b4%e4%bb%b6/jboss">jboss</a></li>
</ul>
</li>
<li id="menu-item-825" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-825"><a href="http://www.hollischuang.com/archives/category/%e7%bb%bc%e5%90%88%e5%ba%94%e7%94%a8">综合应用</a>
<ul class="sub-menu">
	<li id="menu-item-826" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-826"><a href="http://www.hollischuang.com/archives/category/%e7%bb%bc%e5%90%88%e5%ba%94%e7%94%a8/%e5%88%86%e5%b8%83%e5%bc%8f">分布式</a></li>
	<li id="menu-item-828" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-828"><a href="http://www.hollischuang.com/archives/category/%e7%bb%bc%e5%90%88%e5%ba%94%e7%94%a8/%e7%83%ad%e9%83%a8%e7%bd%b2">热部署</a></li>
	<li id="menu-item-1441" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1441"><a href="http://www.hollischuang.com/archives/category/%e7%bb%bc%e5%90%88%e5%ba%94%e7%94%a8/%e7%bd%91%e7%ab%99%e6%9e%b6%e6%9e%84">网站架构</a></li>
	<li id="menu-item-1442" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1442"><a href="http://www.hollischuang.com/archives/category/%e7%bb%bc%e5%90%88%e5%ba%94%e7%94%a8/%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f">设计模式</a></li>
	<li id="menu-item-827" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-827"><a href="http://www.hollischuang.com/archives/category/%e7%bb%bc%e5%90%88%e5%ba%94%e7%94%a8/%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">单元测试</a></li>
</ul>
</li>
<li id="menu-item-832" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-832"><a href="http://www.hollischuang.com/archives/category/%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f">操作系统</a>
<ul class="sub-menu">
	<li id="menu-item-833" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-833"><a href="http://www.hollischuang.com/archives/category/%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f/linux">Linux</a></li>
	<li id="menu-item-834" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-834"><a href="http://www.hollischuang.com/archives/category/%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f/mac-os">mac os</a></li>
</ul>
</li>
<li id="menu-item-169" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-169"><a href="http://www.hollischuang.com/archives/category/debug">异常</a></li>
<li id="menu-item-173" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-173"><a href="http://www.hollischuang.com/archives/category/%e5%85%b6%e4%bb%96">其他</a></li>
							<li class="navto-search"><a href="javascript:;" class="search-show active"><i class="fa fa-search"></i></a></li>
					</ul>
		<div class="topbar">
			<ul class="site-nav topmenu">
				<li id="menu-item-161" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-161"><a href="http://www.hollischuang.com/list">文章归档</a></li>
<li id="menu-item-1127" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1127"><a href="http://www.hollischuang.com/%e9%98%85%e8%af%bb%e4%b9%a6%e5%8d%95">阅读书单</a></li>
<li id="menu-item-1473" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1473"><a href="http://www.hollischuang.com/%e5%b8%b8%e7%94%a8%e5%b7%a5%e5%85%b7">常用工具</a></li>
<li id="menu-item-997" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-997"><a href="http://www.hollischuang.com/%e8%bd%ac%e8%bd%bd%e8%af%b4%e6%98%8e">版权说明</a></li>
<li id="menu-item-986" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-986"><a href="http://www.hollischuang.com/%e4%ba%ba%e6%89%8d%e6%8b%9b%e8%81%98">人才招聘</a></li>
<li id="menu-item-163" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-163"><a href="http://www.hollischuang.com/sample-page">关于作者</a></li>
				<li class="menusns">
					<a href="javascript:;">关注本站 <i class="fa fa-angle-down"></i></a>
					<ul class="sub-menu">
						<li><a class="sns-wechat" href="javascript:;" title="关注”HollisChuang“" data-src="http://www.hollischuang.com/wp-content/uploads/2016/01/qrcode_for_gh_4ebd1b130cbe_430-1-e1453007336936.jpg"><i class="fa fa-wechat"></i> 微信</a></li>						<li><a target="_blank" rel="external nofollow" href="http://weibo.com/hollischuang"><i class="fa fa-weibo"></i> 微博</a></li>						<li><a target="_blank" href="http://www.hollischuang.com/feed/"><i class="fa fa-rss"></i> RSS订阅</a></li>					</ul>
				</li>
			</ul>
			Hi,Welcome To HollisChuang's Blog		</div>
		<i class="fa fa-bars m-icon-nav"></i>
	</div>
</header>
<div class="site-search">
	<div class="container">
		<form method="get" class="site-search-form" action="http://www.hollischuang.com/"><input class="search-input" name="s" placeholder="输入关键字" type="text"><button class="search-btn" type="submit"><i class="fa fa-search"></i></button></form>	</div>
</div><section class="container">
	<div class="content-wrap">
	<div class="content">
				<header class="article-header">
			<h1 class="article-title"><a href="http://www.hollischuang.com/archives/1144">单例与序列化的那些事儿</a></h1>
			<div class="article-meta">
				<span class="item">2016-02-05</span>
								<span class="item">分类：<a href="http://www.hollischuang.com/archives/category/java" rel="category tag">Java</a></span>
				<span class="item post-views">阅读(4619)</span>
				<span class="item">评论(4)</span>
				<span class="item"><br><br>本站采用[<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank">知识共享署名-非商业性使用-相同方式共享 许可协议</a>]进行许可，转载请在<code>正文明显处</code>注明原文地址</span></div></header>
		<article class="article-content">
			<div class="asb asb-post asb-post-01"><script type="text/javascript">
    /*960*60 创建于 2015-12-16*/
    var cpro_id = "u2451530";
</script>
<script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/c.js" type="text/javascript"></script><div id="BAIDU_SSP__wrapper_u2451530_0"><iframe id="iframeu2451530_0" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/gcym.htm" vspace="0" hspace="0" marginwidth="0" marginheight="0" scrolling="no" style="border:0;vertical-align:bottom;margin:0;width:960px;height:60px" allowtransparency="true" width="960" height="60" align="center,center" frameborder="0"></iframe></div>
</div>			<p>本文将通过实例+阅读Java源码的方式介绍序列化是如何破坏单例模式的，以及如何避免序列化对单例的破坏。</p>
<blockquote>
<p>单例模式，是设计模式中最简单的一种。通过单例模式可以保证系统中一个类只有一个实例而且该实例易于外界访问，从而方便对实例个数的控制并节约系统资源。如果希望在系统中某个类的对象只能存在一个，单例模式是最好的解决方案。关于单例模式的使用方式，可以阅读<a href="http://www.hollischuang.com/archives/205">单例模式的七种写法</a></p>
</blockquote>
<p>但是，单例模式真的能够实现实例的唯一性吗？</p>
<p>答案是否定的，很多人都知道使用反射可以破坏单例模式，除了反射以外，使用序列化与反序列化也同样会破坏单例。</p>
<h2>序列化对单例的破坏</h2>
<p>首先来写一个单例的类：</p>
<p>code 1</p>
<pre class="prettyprint prettyprinted" style=""><code><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> com</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">hollis</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">io</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Serializable</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">/**
 * Created by hollis on 16/2/5.
 * 使用双重校验锁方式实现单例
 */</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">implements</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Serializable</span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">volatile</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> singleton</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(){}</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> getSingleton</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">singleton </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">synchronized</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">singleton </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                    singleton </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">();</span></span><span class="pln"><span class="pln">
                </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> singleton</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
<p>接下来是一个测试类：</p>
<p>code 2</p>
<pre class="prettyprint prettyprinted" style=""><code><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> com</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">hollis</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">io</span></span><span class="pun"><span class="pun">.*;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">/**
 * Created by hollis on 16/2/5.
 */</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">SerializableDemo1</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="com"><span class="com">//为了便于理解，忽略关闭流操作及删除文件操作。真正编码时千万不要忘记</span></span><span class="pln"><span class="pln">
    </span></span><span class="com"><span class="com">//Exception直接抛出</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">void</span></span><span class="pln"><span class="pln"> main</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">String</span></span><span class="pun"><span class="pun">[]</span></span><span class="pln"><span class="pln"> args</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">throws</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">IOException</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">ClassNotFoundException</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="com"><span class="com">//Write Obj to file</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">ObjectOutputStream</span></span><span class="pln"><span class="pln"> oos </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">ObjectOutputStream</span></span><span class="pun"><span class="pun">(</span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">FileOutputStream</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"tempFile"</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
        oos</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">writeObject</span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">getSingleton</span></span><span class="pun"><span class="pun">());</span></span><span class="pln"><span class="pln">
        </span></span><span class="com"><span class="com">//Read Obj from file</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">File</span></span><span class="pln"><span class="pln"> file </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">File</span></span><span class="pun"><span class="pun">(</span></span><span class="str"><span class="str">"tempFile"</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">ObjectInputStream</span></span><span class="pln"><span class="pln"> ois </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln">  </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">ObjectInputStream</span></span><span class="pun"><span class="pun">(</span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">FileInputStream</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">file</span></span><span class="pun"><span class="pun">));</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> newInstance </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> ois</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">readObject</span></span><span class="pun"><span class="pun">();</span></span><span class="pln"><span class="pln">
        </span></span><span class="com"><span class="com">//判断是否是同一个对象</span></span><span class="pln"><span class="pln">
        </span></span><span class="typ"><span class="typ">System</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">out</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">println</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">newInstance </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">getSingleton</span></span><span class="pun"><span class="pun">());</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">//false</span></span></code></pre>
<p>输出结构为false，说明：</p>
<blockquote>
<p>通过对Singleton的序列化与反序列化得到的对象是一个新的对象，这就破坏了Singleton的单例性。</p>
</blockquote>
<p>这里，在介绍如何解决这个问题之前，我们先来深入分析一下，为什么会这样？在反序列化的过程中到底发生了什么。</p>
<h2>ObjectInputStream</h2>
<p>对象的序列化过程通过ObjectOutputStream和ObjectInputputStream来实现的，那么带着刚刚的问题，分析一下ObjectInputputStream 的<code>readObject</code> 方法执行情况到底是怎样的。</p>
<p>为了节省篇幅，这里给出ObjectInputStream的<code>readObject</code>的调用栈：</p>
<p><code>readObject---&gt;readObject0---&gt;readOrdinaryObject---&gt;checkResolve</code></p>
<p>这里看一下重点代码，<code>readOrdinaryObject</code>方法的代码片段：<br>
code 3</p>
<pre class="prettyprint prettyprinted" style=""><code><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Object</span></span><span class="pln"><span class="pln"> readOrdinaryObject</span></span><span class="pun"><span class="pun">(</span></span><span class="kwd"><span class="kwd">boolean</span></span><span class="pln"><span class="pln"> unshared</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">throws</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">IOException</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="com"><span class="com">//此处省略部分代码</span></span><span class="pln"><span class="pln">

        </span></span><span class="typ"><span class="typ">Object</span></span><span class="pln"><span class="pln"> obj</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">try</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
            obj </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">isInstantiable</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">?</span></span><span class="pln"><span class="pln"> desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">newInstance</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">:</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">catch</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Exception</span></span><span class="pln"><span class="pln"> ex</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">throw</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">IOException</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">InvalidClassException</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">
                desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">forClass</span></span><span class="pun"><span class="pun">().</span></span><span class="pln"><span class="pln">getName</span></span><span class="pun"><span class="pun">(),</span></span><span class="pln"><span class="pln">
                </span></span><span class="str"><span class="str">"unable to create instance"</span></span><span class="pun"><span class="pun">).</span></span><span class="pln"><span class="pln">initCause</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">ex</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">

        </span></span><span class="com"><span class="com">//此处省略部分代码</span></span><span class="pln"><span class="pln">

        </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">obj </span></span><span class="pun"><span class="pun">!=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">&amp;&amp;</span></span><span class="pln"><span class="pln">
            handles</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">lookupException</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">passHandle</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">&amp;&amp;</span></span><span class="pln"><span class="pln">
            desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">hasReadResolveMethod</span></span><span class="pun"><span class="pun">())</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
            </span></span><span class="typ"><span class="typ">Object</span></span><span class="pln"><span class="pln"> rep </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">invokeReadResolve</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">obj</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">unshared </span></span><span class="pun"><span class="pun">&amp;&amp;</span></span><span class="pln"><span class="pln"> rep</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">getClass</span></span><span class="pun"><span class="pun">().</span></span><span class="pln"><span class="pln">isArray</span></span><span class="pun"><span class="pun">())</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                rep </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> cloneArray</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">rep</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">rep </span></span><span class="pun"><span class="pun">!=</span></span><span class="pln"><span class="pln"> obj</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                handles</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">setObject</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">passHandle</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> obj </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> rep</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">

        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> obj</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span></code></pre>
<p>code 3 中主要贴出两部分代码。先分析第一部分：</p>
<p>code 3.1</p>
<pre class="prettyprint prettyprinted" style=""><code><span class="typ"><span class="typ">Object</span></span><span class="pln"><span class="pln"> obj</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">try</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    obj </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">isInstantiable</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">?</span></span><span class="pln"><span class="pln"> desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">newInstance</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">:</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">catch</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Exception</span></span><span class="pln"><span class="pln"> ex</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">throw</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">IOException</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">InvalidClassException</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">forClass</span></span><span class="pun"><span class="pun">().</span></span><span class="pln"><span class="pln">getName</span></span><span class="pun"><span class="pun">(),</span></span><span class="str"><span class="str">"unable to create instance"</span></span><span class="pun"><span class="pun">).</span></span><span class="pln"><span class="pln">initCause</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">ex</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
<p>这里创建的这个obj对象，就是本方法要返回的对象，也可以暂时理解为是ObjectInputStream的<code>readObject</code>返回的对象。</p>
<blockquote>
<p><code>isInstantiable</code>：如果一个serializable/externalizable的类可以在运行时被实例化，那么该方法就返回true。针对serializable和externalizable我会在其他文章中介绍。</p>
<p><code>desc.newInstance</code>：该方法通过反射的方式调用无参构造方法新建一个对象。</p>
</blockquote>
<p>所以。到目前为止，也就可以解释，为什么序列化可以破坏单例了？</p>
<blockquote>
<p>答：序列化会通过反射调用无参数的构造方法创建一个新的对象。</p>
</blockquote>
<p>那么，接下来我们再看刚开始留下的问题，如何防止序列化/反序列化破坏单例模式。</p>
<h2>防止序列化破坏单例模式</h2>
<p>先给出解决方案，然后再具体分析原理：</p>
<p>只要在Singleton类中定义<code>readResolve</code>就可以解决该问题：</p>
<p>code 4</p>
<pre class="prettyprint prettyprinted" style=""><code><span class="kwd"><span class="kwd">package</span></span><span class="pln"><span class="pln"> com</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">hollis</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">import</span></span><span class="pln"><span class="pln"> java</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">io</span></span><span class="pun"><span class="pun">.</span></span><span class="typ"><span class="typ">Serializable</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
</span></span><span class="com"><span class="com">/**
 * Created by hollis on 16/2/5.
 * 使用双重校验锁方式实现单例
 */</span></span><span class="pln"><span class="pln">
</span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">class</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">implements</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Serializable</span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">volatile</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> singleton</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(){}</span></span><span class="pln"><span class="pln">
    </span></span><span class="kwd"><span class="kwd">public</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">static</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pln"><span class="pln"> getSingleton</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">singleton </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">synchronized</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">.</span></span><span class="kwd"><span class="kwd">class</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">singleton </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                    singleton </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">new</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Singleton</span></span><span class="pun"><span class="pun">();</span></span><span class="pln"><span class="pln">
                </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> singleton</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">

    </span></span><span class="kwd"><span class="kwd">private</span></span><span class="pln"><span class="pln"> </span></span><span class="typ"><span class="typ">Object</span></span><span class="pln"><span class="pln"> readResolve</span></span><span class="pun"><span class="pun">()</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
        </span></span><span class="kwd"><span class="kwd">return</span></span><span class="pln"><span class="pln"> singleton</span></span><span class="pun"><span class="pun">;</span></span><span class="pln"><span class="pln">
    </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
</span></span><span class="pun"><span class="pun">}</span></span></code></pre>
<p>具体原理，我们回过头继续分析code 3中的第二段代码:</p>
<p>code 3.2</p>
<pre class="prettyprint prettyprinted" style=""><code><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">obj </span></span><span class="pun"><span class="pun">!=</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">&amp;&amp;</span></span><span class="pln"><span class="pln">
            handles</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">lookupException</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">passHandle</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">==</span></span><span class="pln"><span class="pln"> </span></span><span class="kwd"><span class="kwd">null</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">&amp;&amp;</span></span><span class="pln"><span class="pln">
            desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">hasReadResolveMethod</span></span><span class="pun"><span class="pun">())</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
            </span></span><span class="typ"><span class="typ">Object</span></span><span class="pln"><span class="pln"> rep </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> desc</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">invokeReadResolve</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">obj</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">unshared </span></span><span class="pun"><span class="pun">&amp;&amp;</span></span><span class="pln"><span class="pln"> rep</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">getClass</span></span><span class="pun"><span class="pun">().</span></span><span class="pln"><span class="pln">isArray</span></span><span class="pun"><span class="pun">())</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                rep </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> cloneArray</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">rep</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
            </span></span><span class="kwd"><span class="kwd">if</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">rep </span></span><span class="pun"><span class="pun">!=</span></span><span class="pln"><span class="pln"> obj</span></span><span class="pun"><span class="pun">)</span></span><span class="pln"><span class="pln"> </span></span><span class="pun"><span class="pun">{</span></span><span class="pln"><span class="pln">
                handles</span></span><span class="pun"><span class="pun">.</span></span><span class="pln"><span class="pln">setObject</span></span><span class="pun"><span class="pun">(</span></span><span class="pln"><span class="pln">passHandle</span></span><span class="pun"><span class="pun">,</span></span><span class="pln"><span class="pln"> obj </span></span><span class="pun"><span class="pun">=</span></span><span class="pln"><span class="pln"> rep</span></span><span class="pun"><span class="pun">);</span></span><span class="pln"><span class="pln">
            </span></span><span class="pun"><span class="pun">}</span></span><span class="pln"><span class="pln">
        </span></span><span class="pun"><span class="pun">}</span></span></code></pre>
<p><code>hasReadResolveMethod</code>:如果实现了serializable 或者 externalizable接口的类中包含<code>readResolve</code>则返回true</p>
<p><code>invokeReadResolve</code>:通过反射的方式调用要被反序列化的类的readResolve方法。</p>
<p>所以，原理也就清楚了，主要在Singleton中定义readResolve方法，并在该方法中指定要返回的对象的生成策略，就可以方式单例被破坏。</p>
<h2>总结</h2>
<p>在涉及到序列化的场景时，要格外注意他对单例的破坏。</p>
<h2>推荐阅读</h2>
<p><a href="http://www.hollischuang.com/archives/1140">深入分析Java的序列化与反序列化</a></p>
<p class="asb-post-footer"><strong>【公告】</strong><a target="_blank" href="http://www.hollischuang.com/%E8%BD%AC%E8%BD%BD%E8%AF%B4%E6%98%8E">版权声明</a></p>(全文完)<center><img src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/qrcode_for_gh_4ebd1b130cbe_430-1.jpg" title="" alt="" width="300px" height="300px">欢迎关注HollisChuang微信公众账号</center>        <div class="gave" style="clear:both">
            <a href="javascript:;" id="gave">打赏</a>
            <div class="code" id="wechatCode" style="display: none">
                <img src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/IMG_11933.jpg" alt="微信扫一扫支付">
                <div>支付宝扫一扫，打赏作者吧～</div>
            </div>
        </div><p class="post-copyright">如未加特殊说明，此网站文章均为原创，转载必须注明出处。<a href="http://www.hollischuang.com/">HollisChuang's Blog</a> » <a href="http://www.hollischuang.com/archives/1144">单例与序列化的那些事儿</a></p>		</article>
				<div class="article-tags">标签：<a href="http://www.hollischuang.com/archives/tag/%e5%8d%95%e4%be%8b" rel="tag">单例</a><a href="http://www.hollischuang.com/archives/tag/%e5%ba%8f%e5%88%97%e5%8c%96" rel="tag">序列化</a></div>		<div class="action-share bdsharebuttonbox bdshare-button-style0-24" data-bd-bind="1500728448635">
			分享到：<a class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"></a><a class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"></a><a class="bds_weixin" data-cmd="weixin" title="分享到微信"></a><a class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"></a><a class="bds_sqq" data-cmd="sqq" title="分享到QQ好友"></a><a class="bds_bdhome" data-cmd="bdhome" title="分享到百度新首页"></a><a class="bds_tqf" data-cmd="tqf" title="分享到腾讯朋友"></a><a class="bds_renren" data-cmd="renren" title="分享到人人网"></a><a class="bds_diandian" data-cmd="diandian" title="分享到点点网"></a><a class="bds_youdao" data-cmd="youdao" title="分享到有道云笔记"></a><a class="bds_ty" data-cmd="ty" title="分享到天涯社区"></a><a class="bds_kaixin001" data-cmd="kaixin001" title="分享到开心网"></a><a class="bds_taobao" data-cmd="taobao"></a><a class="bds_douban" data-cmd="douban" title="分享到豆瓣网"></a><a class="bds_fbook" data-cmd="fbook" title="分享到Facebook"></a><a class="bds_twi" data-cmd="twi" title="分享到Twitter"></a><a class="bds_mail" data-cmd="mail" title="分享到邮件分享"></a><a class="bds_copy" data-cmd="copy" title="分享到复制网址"></a><a class="bds_more" data-cmd="more">更多</a> (<a class="bds_count" data-cmd="count"></a>)		</div>
	<div class="asb asb-post asb-post-02"><script type="text/javascript">
    /*960*90 创建于 2015-12-11*/
    var cpro_id = "u2443812";
</script>
<script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/c.js" type="text/javascript"></script><div id="BAIDU_SSP__wrapper_u2443812_0"><iframe id="iframeu2443812_0" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/gcym_002.htm" vspace="0" hspace="0" marginwidth="0" marginheight="0" scrolling="no" style="border:0;vertical-align:bottom;margin:0;width:960px;height:90px" allowtransparency="true" width="960" height="90" align="center,center" frameborder="0"></iframe></div>
</div>		<div class="relates"><div class="title"><h3>相关推荐</h3></div><ul><li><a href="http://www.hollischuang.com/archives/1383">设计模式（三）——JDK中的那些单例</a></li><li><a href="http://www.hollischuang.com/archives/1158">《成神之路-基础篇》Java基础知识——序列化（已完结）</a></li><li><a href="http://www.hollischuang.com/archives/1150">Java对象的序列化与反序列化</a></li><li><a href="http://www.hollischuang.com/archives/1140">深入分析Java的序列化与反序列化</a></li><li><a href="http://www.hollischuang.com/archives/205">[转+注]单例模式的七种写法</a></li><li><a href="http://www.hollischuang.com/archives/1786">同步容器（如Vector）并不是所有操作都线程安全！~</a></li><li><a href="http://www.hollischuang.com/archives/1606">排名Top 16的Java实用类库</a></li><li><a href="http://www.hollischuang.com/archives/1561">Java开发必须掌握的线上问题排查命令</a></li></ul></div><a name="comments"></a>
<div id="SOHUCS" sid="1144"><div id="SOHU_MAIN"></div></div><script>
if(window.screen.width > 960) {
    (function(){var appid = 'cyrFnsBtC',conf = 'prod_957fbae232bab98fce4551fdee712071';
        var doc = document,
        s = doc.createElement('script'),
        h = doc.getElementsByTagName('head')[0] || doc.head || doc.documentElement;
        s.type = 'text/javascript';
        s.charset = 'utf-8';
        s.src =  'http://assets.changyan.sohu.com/upload/changyan.js?conf=' + conf + '&appid=' + appid;
        h.insertBefore(s,h.firstChild);
    })()
    } else {
    (function(){
        var expire_time = parseInt((new Date()).getTime()/(5*60*1000));
        var head = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
        var script_version = document.createElement("script"),script_cyan = document.createElement("script");
        script_version.type = script_cyan.type = "text/javascript";
        script_version.charset = script_cyan.charset = "utf-8";
        script_version.onload = function(){
            script_cyan.id = 'changyan_mobile_js';
            script_cyan.src = 'http://changyan.itc.cn/upload/mobile/wap-js/changyan_mobile.js?client_id=cyrFnsBtC&conf=prod_957fbae232bab98fce4551fdee712071&version=cyan_resource_version';
            head.insertBefore(script_cyan, head.firstChild);
        };
        script_version.src = 'http://changyan.sohu.com/upload/mobile/wap-js/version.js?_='+expire_time;
        head.insertBefore(script_version, head.firstChild);
    })();
}</script>
<div id="ds-ssr" style="display:none">
		            <ol id="commentlist">
                		<li class="comment even thread-even depth-1" id="li-comment-180">
			<article id="comment-180" class="comment">
				<footer class="comment-meta">
					<cite class="comment-author vcard">
						<span class="fn"><a href="https://sedo.com/search/details.php4?language=en&amp;domain=356688.com" rel="external nofollow" class="url">356688</a></span> on <a rel="nofollow" href="http://www.hollischuang.com/archives/1144#comment-180"><time pubdate="" datetime="2016-02-07T08:31:08+00:00">2016年2月7日 at 上午8:31</time></a> <span class="says">said:</span>					</cite>
				</footer>
	
				<div class="comment-content"><p>honey,how are you</p>
</div>
				
			</article>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-183">
			<article id="comment-183" class="comment">
				<footer class="comment-meta">
					<cite class="comment-author vcard">
						<span class="fn"><a href="http://www.356688.com/" rel="external nofollow" class="url">356688</a></span> on <a rel="nofollow" href="http://www.hollischuang.com/archives/1144#comment-183"><time pubdate="" datetime="2016-02-12T01:29:24+00:00">2016年2月12日 at 上午1:29</time></a> <span class="says">said:</span>					</cite>
				</footer>
	
				<div class="comment-content"><p>It’s not bad</p>
</div>
				
			</article>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="li-comment-328">
			<article id="comment-328" class="comment">
				<footer class="comment-meta">
					<cite class="comment-author vcard">
						<span class="fn">TemporaryofCP</span> on <a rel="nofollow" href="http://www.hollischuang.com/archives/1144#comment-328"><time pubdate="" datetime="2016-06-12T16:21:08+00:00">2016年6月12日 at 下午4:21</time></a> <span class="says">said:</span>					</cite>
				</footer>
	
				<div class="comment-content"><p>code 4不合理吧，最后一行应该是return getInstance();</p>
</div>
				
			</article>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-418">
			<article id="comment-418" class="comment">
				<footer class="comment-meta">
					<cite class="comment-author vcard">
						<span class="fn">博予liutxer</span> on <a rel="nofollow" href="http://www.hollischuang.com/archives/1144#comment-418"><time pubdate="" datetime="2016-10-23T10:57:01+00:00">2016年10月23日 at 上午10:57</time></a> <span class="says">said:</span>					</cite>
				</footer>
	
				<div class="comment-content"><p>什么情景下会出现单例被序列化后又反序列化出来呢？</p>
</div>
				
			</article>
		</li><!-- #comment-## -->
            </ol>

		    </div>
	</div>
	</div>
			
	
	<aside class="sidebar">
<div class="widget widget_ui_posts"><h3><font color="#00BFFF">【置顶推荐】</font></h3><ul class="nopic"><li><a href="http://www.hollischuang.com/archives/1158"><span class="text">《成神之路-基础篇》Java基础知识——序列化（已完结）</span><span class="muted">2016-02-18</span><span class="muted">评论(1)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/1132"><span class="text">大型网站架构技术一览</span><span class="muted">2016-02-03</span><span class="muted">评论(1)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/1036"><span class="text">[10.17日更新]各大互联网公司架构演进之路汇总</span><span class="muted">2016-01-19</span><span class="muted">评论(6)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/1003"><span class="text">《成神之路-基础篇》JVM——Java内存相关(已完结)</span><span class="muted">2016-01-17</span><span class="muted">评论(3)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/966"><span class="text">Java开发必装的IntelliJ IDEA插件</span><span class="muted">2016-01-13</span><span class="muted">评论(4)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/800"><span class="text">Java开发必会的Linux命令</span><span class="muted">2015-12-15</span><span class="muted">评论(14)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/728"><span class="text">大型网站架构演化历程</span><span class="muted">2015-12-09</span><span class="muted">评论(12)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/489"><span class="text">Java工程师成神之路~</span><span class="muted">2015-08-01</span><span class="muted">评论(33)</span></a></li>
</ul></div><div class="widget widget_ui_posts affix-top" style="top: 0px;"><h3>【猜你喜欢】</h3><ul class="nopic"><li><a href="http://www.hollischuang.com/archives/190"><span class="text">Webx PullService分析</span><span class="muted">2015-04-18</span><span class="muted">评论()</span></a></li>
<li><a href="http://www.hollischuang.com/archives/1069"><span class="text">Uncaught TypeError: Cannot call method ‘toLowerCase’ of undefined</span><span class="muted">2016-01-20</span><span class="muted">评论()</span></a></li>
<li><a href="http://www.hollischuang.com/archives/885"><span class="text">[转]厌倦了NullPointException？Optional拯救你！</span><span class="muted">2015-12-26</span><span class="muted">评论(1)</span></a></li>
<li><a href="http://www.hollischuang.com/archives/1327"><span class="text">《成神之路-基础篇》Java基础知识——Java中各种关键字</span><span class="muted">2016-03-23</span><span class="muted">评论()</span></a></li>
<li><a href="http://www.hollischuang.com/archives/502"><span class="text">ibatis防止sql注入</span><span class="muted">2015-08-08</span><span class="muted">评论()</span></a></li>
<li><a href="http://www.hollischuang.com/archives/287"><span class="text">Webx表单验证</span><span class="muted">2015-04-22</span><span class="muted">评论()</span></a></li>
</ul></div><div class="widget widget_ui_ads"><div class="item"><script type="text/javascript">
    /*360*300 创建于 2015-12-11*/
    var cpro_id = "u2443824";
</script>
<script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/c.js" type="text/javascript"></script><div id="BAIDU_SSP__wrapper_u2443824_0"><iframe id="iframeu2443824_0" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/gcym_003.htm" vspace="0" hspace="0" marginwidth="0" marginheight="0" scrolling="no" style="border:0;vertical-align:bottom;margin:0;width:360px;height:300px" allowtransparency="true" width="360" height="300" align="center,center" frameborder="0"></iframe></div>
</div></div><div class="widget widget_ui_tags"><h3>热门标签</h3><div class="items"><a href="http://www.hollischuang.com/archives/tag/webx">webx (12)</a><a href="http://www.hollischuang.com/archives/tag/%e4%ba%8b%e5%8a%a1">事务 (11)</a><a href="http://www.hollischuang.com/archives/tag/java%e5%b7%a5%e7%a8%8b%e5%b8%88%e6%88%90%e7%a5%9e%e4%b9%8b%e8%b7%af">Java工程师成神之路 (10)</a><a href="http://www.hollischuang.com/archives/tag/java%e5%91%bd%e4%bb%a4%e5%ad%a6%e4%b9%a0%e7%b3%bb%e5%88%97">Java命令学习系列 (9)</a><a href="http://www.hollischuang.com/archives/tag/string">String (8)</a><a href="http://www.hollischuang.com/archives/tag/%e5%88%86%e5%b8%83%e5%bc%8f">分布式 (8)</a><a href="http://www.hollischuang.com/archives/tag/webx%e5%ad%a6%e4%b9%a0%e7%b3%bb%e5%88%97">webx学习系列 (6)</a><a href="http://www.hollischuang.com/archives/tag/generic">泛型 (6)</a><a href="http://www.hollischuang.com/archives/tag/zookeeper">zookeeper (6)</a><a href="http://www.hollischuang.com/archives/tag/java">Java (5)</a><a href="http://www.hollischuang.com/archives/tag/%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">单元测试 (5)</a><a href="http://www.hollischuang.com/archives/tag/%e9%94%81">锁 (5)</a><a href="http://www.hollischuang.com/archives/tag/%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f">工厂模式 (5)</a><a href="http://www.hollischuang.com/archives/tag/linux">linux (4)</a><a href="http://www.hollischuang.com/archives/tag/%e5%ba%8f%e5%88%97%e5%8c%96">序列化 (4)</a><a href="http://www.hollischuang.com/archives/tag/java-7-%e6%ba%90%e7%a0%81%e5%ad%a6%e4%b9%a0%e7%b3%bb%e5%88%97">Java 7 源码学习系列 (4)</a><a href="http://www.hollischuang.com/archives/tag/%e7%83%ad%e9%83%a8%e7%bd%b2">热部署 (4)</a><a href="http://www.hollischuang.com/archives/tag/%e5%9b%be%e8%af%b4java">图说Java (4)</a><a href="http://www.hollischuang.com/archives/tag/%e9%9d%a2%e8%af%95%e9%a2%98">面试题 (3)</a><a href="http://www.hollischuang.com/archives/tag/%e6%9e%9a%e4%b8%be">枚举 (3)</a><a href="http://www.hollischuang.com/archives/tag/jvm">jvm (3)</a><a href="http://www.hollischuang.com/archives/tag/%e5%8d%95%e4%be%8b">单例 (3)</a><a href="http://www.hollischuang.com/archives/tag/%e7%bd%91%e7%ab%99%e6%9e%b6%e6%9e%84">网站架构 (3)</a><a href="http://www.hollischuang.com/archives/tag/%e5%a5%bd%e4%b9%a6%e6%8e%a8%e8%8d%90">好书推荐 (3)</a><a href="http://www.hollischuang.com/archives/tag/mysql">MySql (3)</a><a href="http://www.hollischuang.com/archives/tag/fail-fast">fail-fast (2)</a><a href="http://www.hollischuang.com/archives/tag/sql">sql (2)</a><a href="http://www.hollischuang.com/archives/tag/jre">JRE (2)</a><a href="http://www.hollischuang.com/archives/tag/classloader">ClassLoader (2)</a><a href="http://www.hollischuang.com/archives/tag/%e7%ba%bf%e7%a8%8b%e5%ae%89%e5%85%a8">线程安全 (2)</a></div></div></aside></section>

<div class="branding branding-black">
	<div class="container">
		<h2>HollisChuang's Blog</h2>
		<a target="blank" class="btn btn-lg" href="http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=-JSTkJCVj5_UiZ2Sm7yNjdKfk5E">联系我</a><a target="blank" class="btn btn-lg" href="http://www.hollischuang.com/sample-page">关于我</a>	</div>
</div>
<footer class="footer">
	<div class="container">
		<p>© 2017 <a href="http://www.hollischuang.com/">HollisChuang's Blog</a> &nbsp; <a href="http://www.hollischuang.com/sitemap.xml">网站地图</a>|<a href="http://www.aliyun.com/" target="_blank">阿里云</a>|<a href="http://www.alibaba.com/" target="_blank">Alibaba.com</a>|<script type="text/javascript">var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_1256611093'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s4.cnzz.com/z_stat.php%3Fid%3D1256611093%26show%3Dpic' type='text/javascript'%3E%3C/script%3E"));</script><span id="cnzz_stat_icon_1256611093"><a href="http://www.cnzz.com/stat/website.php?web_id=1256611093" target="_blank" title="站长统计"><img src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/pic.gif" vspace="0" hspace="0" border="0"></a></span><script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/z_stat.php" type="text/javascript"></script><script src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/core.php" charset="utf-8" type="text/javascript"></script></p>
		<meta name="baidu_union_verify" content="4a8bd1a9881911c8738ed782f83b5757">	</div>
</footer>

<script>
window.jsui={
    www: 'http://www.hollischuang.com',
    uri: 'http://www.hollischuang.com/wp-content/themes/dux',
    ver: 'THEME_VERSION',
	roll: ["2","6"],
    ajaxpager: '2',
    url_rp: 'http://www.hollischuang.com/sample-page'
};
</script>
<!--FOOTER_CODE_START-->
<meta name="baidu_union_verify" content="4a8bd1a9881911c8738ed782f83b5757">
<!--FOOTER_CODE_END-->
<link rel="stylesheet" id="wechat-reward-css" href="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/wechat-reward.css" type="text/css" media="all">
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/soundmanager2.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var wp_player_params = {"swf":"http:\/\/www.hollischuang.com\/wp-content\/plugins\/wp-player\/js\/","url":"http:\/\/www.hollischuang.com\/wp-admin\/admin-ajax.php","nonce":"c4a1037915","single":"true"};
/* ]]> */
</script>
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/wp-player.js"></script>
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/bootstrap.js"></script>
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/loader.js"></script>
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/wechat-reward.js"></script>
<script type="text/javascript" src="%E5%8D%95%E4%BE%8B%E4%B8%8E%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF-HollisChuang%27s%20Blog_files/markdown.js"></script>





    <div class="m-mask"></div>    <div class="rollbar"><ul><li><a href="javascript:(scrollTo('#comments',-15));"><i class="fa fa-comments"></i></a><h6>去评论<i></i></h6></li><li><a href="javascript:(scrollTo());"><i class="fa fa-angle-up"></i></a><h6>去顶部<i></i></h6></li>    </ul></div>			<div class="sign">			    <div class="sign-mask"></div>			    <div class="container">			        <a href="#" class="close-link signclose-loader"><i class="fa fa-close"></i></a>			        <div class="sign-tips"></div>			        <form id="sign-in">  			            <h3><small class="signup-loader">切换注册</small>登录</h3>			            <h6>			                <label for="inputEmail">邮箱</label>			                <input name="email" class="form-control" id="inputEmail" placeholder="登录邮箱" type="email">			            </h6>			            <h6>			                <label for="inputPassword">密码</label>			                <input name="password" class="form-control" id="inputPassword" placeholder="登录密码" type="password">			            </h6>			            <div class="sign-submit">			                <input class="btn btn-primary signsubmit-loader" name="submit" value="登录" type="button">  			                <input name="action" value="signin" type="hidden">			                <label><input checked="checked" name="remember" value="forever" type="checkbox">记住我</label>			            </div><div class="sign-info"><a href="http://www.hollischuang.com/sample-page">找回密码？</a></div></form>			        <form id="sign-up"> 			            <h3><small class="signin-loader">切换登录</small>注册</h3>			            <h6>			                <label for="inputName">昵称</label>			                <input name="name" class="form-control" id="inputName" placeholder="设置昵称" type="text">			            </h6>			            <h6>			                <label for="inputEmail">邮箱</label>			                <input name="email" class="form-control" id="inputEmail" placeholder="邮箱" type="email">			            </h6>			            <h6>			                <label for="inputPassword">密码</label>			                <input name="password" class="form-control" id="inputPassword" placeholder="设置登录密码" type="password">			            </h6>			            <div class="sign-submit">			                <input class="btn btn-primary btn-block signsubmit-loader" name="submit" value="快速注册" type="button">  			                <input name="action" value="signup" type="hidden">  			            </div>			        </form>			    </div>			</div>		</body></html>
<!-- Dynamic page generated in 0.357 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2017-07-22 13:00:34 -->
<!-- super cache -->